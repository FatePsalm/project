<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="cn.dingd.dd.biz.backgroud.dao.OrganizationInfoMapper">
	<resultMap id="BaseResultMap"
		type="cn.dingd.dd.biz.common.entity.OrganizationInfo">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Apr 25 
			10:19:32 CST 2018. -->
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="org_desc" property="orgDesc" jdbcType="VARCHAR" />
		<result column="parent_id" property="parentId"
			jdbcType="INTEGER" />
		<result column="account_id" property="accountId"
			jdbcType="INTEGER" />
		<result column="update_time" property="updateTime"
			jdbcType="TIMESTAMP" />
		<result column="upd_account_id" property="updAccountId"
			jdbcType="INTEGER" />
		<result column="create_time" property="createTime"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, org_desc, parent_id, account_id, update_time, upd_account_id,
		create_time
	</sql>
	<!-- public List<OrganizationInfo> selectTree() -->
	<select id="selectTree"
		resultType="cn.dingd.dd.biz.common.entity.OrganizationInfo">
		SELECT
		id,
		name,
		org_desc as orgDesc,
		parent_id as parentId,
		account_id as accountId,
		update_time as updateTime,
		upd_account_id as
		updAccountId,
		create_time as createTime
		FROM
		organization_info
		where
		parent_id is not null
	</select>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="cn.dingd.dd.biz.common.entity.OrganizationInfoExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from organization_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from organization_info
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from organization_info
		where id =
		#{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="cn.dingd.dd.biz.common.entity.OrganizationInfoExample">
		delete from organization_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="cn.dingd.dd.biz.common.entity.OrganizationInfo">
		insert into organization_info (
		name,
		org_desc,
		parent_id,
		account_id,
		update_time,
		upd_account_id,
		create_time
		)
		values (
		#{name,jdbcType=VARCHAR},
		#{orgDesc,jdbcType=VARCHAR},
		#{parentId,jdbcType=INTEGER},
		#{accountId,jdbcType=INTEGER},
		NOW(),
		#{accountId,jdbcType=INTEGER},
		NOW()
		)
	</insert>
	<insert id="insertSelective"
		parameterType="cn.dingd.dd.biz.common.entity.OrganizationInfo">
		insert into organization_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="orgDesc != null">
				org_desc,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="orgDesc != null">
				#{orgDesc,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="cn.dingd.dd.biz.common.entity.OrganizationInfoExample"
		resultType="java.lang.Integer">
		select count(*) from organization_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update organization_info
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.orgDesc != null">
				org_desc = #{record.orgDesc,jdbcType=VARCHAR},
			</if>
			<if test="record.parentId != null">
				parent_id = #{record.parentId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update organization_info
		set id = #{record.id,jdbcType=INTEGER},
		name =
		#{record.name,jdbcType=VARCHAR},
		org_desc =
		#{record.orgDesc,jdbcType=VARCHAR},
		parent_id =
		#{record.parentId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="cn.dingd.dd.biz.common.entity.OrganizationInfo">
		update organization_info
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="orgDesc != null">
				org_desc = #{orgDesc,jdbcType=VARCHAR},
			</if>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.dingd.dd.biz.common.entity.OrganizationInfo" >
    update organization_info
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="orgDesc != null" >
        org_desc = #{orgDesc,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updAccountId != null" >
        upd_account_id = #{updAccountId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>