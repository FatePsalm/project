package cn.dingd.dd.biz.backgroud.service.impl;


import cn.dingd.dd.biz.backgroud.dao.SjOderMapper;
import cn.dingd.dd.biz.backgroud.service.BizCommonService;
import cn.dingd.dd.biz.backgroud.service.SjOderService;
import cn.dingd.dd.biz.common.entity.CheckBillExample;
import cn.dingd.dd.biz.common.entity.StaffInfo;
import cn.dingd.dd.common.entity.AUserEntity;
import cn.dingd.dd.common.entity.CheckBillEntity;
import cn.dingd.dd.common.entity.StaffInfoEntity;
import cn.dingd.dd.common.util.EX;
import cn.dingd.dd.common.util.Variable;
import cn.dingd.dd.common.web.PageObject;
import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Service
public class SjOderServiceImpl implements SjOderService {
@Autowired
private SjOderMapper sjOderMapper;
@Autowired
private BizCommonService bizCommonService;

    @Override
    public Map<String, Object> selectCarZH(Integer carID) {
        Map<String, Object> map = null;
        try {
            map = sjOderMapper.selectCarZH(carID);
        } catch (Exception e) {
            e.printStackTrace();
            EX.mysqlE();
        }
        return map;
    }

    public List<CheckBillEntity> selectIdALL(Integer id) {
    List<CheckBillEntity> checkBillEntities = null;
    try {
        checkBillEntities = sjOderMapper.selectIdALL(id);
    } catch (Exception e) {
        e.printStackTrace();
        EX.mysqlE();
    }
    return checkBillEntities;
}

/**
 * 时间: 2018/4/28 15:13
 * 功能描述:把Map封装入创建人电话和姓名
 */
public void checkMap(Map<String, Object> stringObjectMap) throws Exception {
    if (stringObjectMap != null) {
        Integer checkType = (Integer) stringObjectMap.get("checkType");
        if (checkType == Variable.checkBill_PC || checkType == Variable.checkBill_JC) {
            StaffInfoEntity createPerson = sjOderMapper.selectStaffId((Integer) stringObjectMap.get("createPerson"));
            if (createPerson != null) {
                stringObjectMap.put("UserName", createPerson.getuName());
                stringObjectMap.put("UserPhone", createPerson.getuPhone());
            }
        } else if (checkType == Variable.checkBill_SJ) {
            AUserEntity createPerson = sjOderMapper.selectAuseId((Integer) stringObjectMap.get("createPerson"));
            if (createPerson != null) {
                stringObjectMap.put("UserName", createPerson.getuName());
                stringObjectMap.put("UserPhone", createPerson.getuPhone());
            }
        }
    }
}

/**
 * 时间: 2018/4/28 14:28
 * 功能描述:根据ID查询检测订单详细
 */
@Override
public Map<String, Object> selectId(Integer id) {
    Map<String, Object> stringObjectMap = null;
    try {
        stringObjectMap = sjOderMapper.selectId(id);
        checkMap(stringObjectMap);
    } catch (Exception e) {
        e.printStackTrace();
        EX.mysqlE();
    }
    return stringObjectMap;
}
public String listToString(List<Integer> stringList){
    StringBuilder result=new StringBuilder();
    boolean flag=false;
    for (Integer index : stringList) {
        if (flag) {
            result.append(","); // 分隔符
        }else {
            flag=true;
        }
        result.append(index);
    }
    return result.toString();
}

/**
 * 时间: 2018/4/28 15:12
 * 功能描述:获取订单列表
 */
public Map<String, Object> selectFind(CheckBillEntity checkBillEntity, PageObject pageObject, StaffInfo staffInfo) {
    List<Integer> integers = bizCommonService.orgIdsInStaff(staffInfo.getId());//获取当前登陆用户(负责人)下所有的员工
    String s = listToString(integers);//list<Integer>转String
    List<Map<String, Object>> selectFind = null;
    HashMap<String, Object> objectObjectHashMap = new HashMap<>();
    Page<Object> objects;
    try {
        objects = PageHelper.startPage(pageObject.getPageCurrent(), pageObject.getPageSize());
        selectFind = sjOderMapper.selectFind(checkBillEntity,s);
        pageObject.setRowCount((int) objects.getTotal());
        if (selectFind != null) {
            for (Map<String, Object> index : selectFind
                    ) {
                checkMap(index);
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
        EX.mysqlE();
    }
    objectObjectHashMap.put("list",selectFind);
    objectObjectHashMap.put("pageObject",pageObject);
    return objectObjectHashMap;
}

@Override
public int countByExample(CheckBillExample example) {
    // TODO Auto-generated method stub
    return 0;
}

@Override
public int deleteByExample(CheckBillExample example) {
    // TODO Auto-generated method stub
    return 0;
}

@Override
public int deleteByPrimaryKey(Integer id) {
    // TODO Auto-generated method stub
    return 0;
}

@Override
public int insert(CheckBillEntity record) {
    // TODO Auto-generated method stub
    return 0;
}

@Override
public int insertSelective(CheckBillEntity record) {
    // TODO Auto-generated method stub
    return 0;
}

@Override
public List<CheckBillEntity> selectByExample(CheckBillExample example) {
    // TODO Auto-generated method stub
    return null;
}

@Override
public CheckBillEntity selectByPrimaryKey(Integer id) {
    // TODO Auto-generated method stub
    return null;
}

@Override
public int updateByExampleSelective(CheckBillEntity record, CheckBillExample example) {
    // TODO Auto-generated method stub
    return 0;
}

@Override
public int updateByExample(CheckBillEntity record, CheckBillExample example) {
    // TODO Auto-generated method stub
    return 0;
}

@Override
public int updateByPrimaryKeySelective(CheckBillEntity record) {
    // TODO Auto-generated method stub
    return 0;
}

@Override
public int updateByPrimaryKey(CheckBillEntity record) {
    // TODO Auto-generated method stub
    return 0;
}

}
