<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fsc.fscweb.dao.MyWalletMapper" >
  <resultMap id="BaseResultMap" type="com.fsc.fscweb.entity.MyWallet" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name_id" property="userNameId" jdbcType="INTEGER" />
    <result column="money_type" property="moneyType" jdbcType="VARCHAR" />
    <result column="money_usable" property="moneyUsable" jdbcType="INTEGER" />
    <result column="money_freeze" property="moneyFreeze" jdbcType="INTEGER" />
    <result column="money_overall" property="moneyOverall" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_name_id, money_type, money_usable, money_freeze, money_overall
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fsc.fscweb.entity.MyWalletExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from my_wallet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from my_wallet
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from my_wallet
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fsc.fscweb.entity.MyWalletExample" >
    delete from my_wallet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fsc.fscweb.entity.MyWallet" >
    insert into my_wallet (id, user_name_id, money_type, 
      money_usable, money_freeze, money_overall
      )
    values (#{id,jdbcType=INTEGER}, #{userNameId,jdbcType=INTEGER}, #{moneyType,jdbcType=VARCHAR}, 
      #{moneyUsable,jdbcType=INTEGER}, #{moneyFreeze,jdbcType=INTEGER}, #{moneyOverall,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fsc.fscweb.entity.MyWallet" >
    insert into my_wallet
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userNameId != null" >
        user_name_id,
      </if>
      <if test="moneyType != null" >
        money_type,
      </if>
      <if test="moneyUsable != null" >
        money_usable,
      </if>
      <if test="moneyFreeze != null" >
        money_freeze,
      </if>
      <if test="moneyOverall != null" >
        money_overall,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userNameId != null" >
        #{userNameId,jdbcType=INTEGER},
      </if>
      <if test="moneyType != null" >
        #{moneyType,jdbcType=VARCHAR},
      </if>
      <if test="moneyUsable != null" >
        #{moneyUsable,jdbcType=INTEGER},
      </if>
      <if test="moneyFreeze != null" >
        #{moneyFreeze,jdbcType=INTEGER},
      </if>
      <if test="moneyOverall != null" >
        #{moneyOverall,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fsc.fscweb.entity.MyWalletExample" resultType="java.lang.Integer" >
    select count(*) from my_wallet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update my_wallet
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userNameId != null" >
        user_name_id = #{record.userNameId,jdbcType=INTEGER},
      </if>
      <if test="record.moneyType != null" >
        money_type = #{record.moneyType,jdbcType=VARCHAR},
      </if>
      <if test="record.moneyUsable != null" >
        money_usable = #{record.moneyUsable,jdbcType=INTEGER},
      </if>
      <if test="record.moneyFreeze != null" >
        money_freeze = #{record.moneyFreeze,jdbcType=INTEGER},
      </if>
      <if test="record.moneyOverall != null" >
        money_overall = #{record.moneyOverall,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update my_wallet
    set id = #{record.id,jdbcType=INTEGER},
      user_name_id = #{record.userNameId,jdbcType=INTEGER},
      money_type = #{record.moneyType,jdbcType=VARCHAR},
      money_usable = #{record.moneyUsable,jdbcType=INTEGER},
      money_freeze = #{record.moneyFreeze,jdbcType=INTEGER},
      money_overall = #{record.moneyOverall,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fsc.fscweb.entity.MyWallet" >
    update my_wallet
    <set >
      <if test="userNameId != null" >
        user_name_id = #{userNameId,jdbcType=INTEGER},
      </if>
      <if test="moneyType != null" >
        money_type = #{moneyType,jdbcType=VARCHAR},
      </if>
      <if test="moneyUsable != null" >
        money_usable = #{moneyUsable,jdbcType=INTEGER},
      </if>
      <if test="moneyFreeze != null" >
        money_freeze = #{moneyFreeze,jdbcType=INTEGER},
      </if>
      <if test="moneyOverall != null" >
        money_overall = #{moneyOverall,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fsc.fscweb.entity.MyWallet" >
    update my_wallet
    set user_name_id = #{userNameId,jdbcType=INTEGER},
      money_type = #{moneyType,jdbcType=VARCHAR},
      money_usable = #{moneyUsable,jdbcType=INTEGER},
      money_freeze = #{moneyFreeze,jdbcType=INTEGER},
      money_overall = #{moneyOverall,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>